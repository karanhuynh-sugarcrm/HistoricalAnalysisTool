/**
 * Generate difference between two representations of Allure Reports
 * @author Eric Tam
 */

var diff = require('deep-diff').diff;
var async = require('async');

/**
 * @constructor
 * @param {Object} A simplified old report generated by AllureParser 
 * @param {Object} A simplified new report generated by AllureParser 
 */
function AllureDiff(oldAllureReport, newAllureReport) {
    this.oldTests = oldAllureReport;
    this.newTests = newAllureReport;
}

function AllureDiff(allureReports) {

}
// Finds the difference in test results 
AllureDiff.prototype.statusDiff = function(allureReports) {
    var results = {};
    var current = 0;
    var previous = 1;
    var len = allureReports.length; 
    var pass = {
        PASSED: "PASSED",
        PENDING: "PENDING",
        NONE: "NONE",
    };
    var fail = {
        BROKEN: "BROKEN",
        FAILED: "FAILED"
    };
    for (var i = 0; i < len - 1 ; i++) {
        for (var testName in allureReports[current]) {
            if (allureReports[previous][testName] == undefined) {
                allureReports[previous][testName] = {
                    'status' : "NONE"
                }
            }
            if ((fail[allureReports[previous][testName].status] &&
                pass[allureReports[current][testName].status]) ||
                (fail[allureReports[current][testName].status] &&
                pass[allureReports[previous][testName].status])) {

                if (results[testName] == undefined) {
                        results[testName] = {
                            name: testName,
                            stat: 0,
                            flop: 0,
                            arr: {},
                            total: 0,
                        };
                }
                results[testName].flop++;
            } 
        }
        previous++;
        current++;
    }
    // Gets total of test runs with a test result which is now uncessary
    // Assigns status 
    // Assigns n/a for test runs without a test result
    // Assigns stack trace URL
    // Calculates stability percentage
    var floppyTests = Object.keys(results);
    results["numUnstableTests"] = floppyTests.length;
    async.forEach(floppyTests, function (item, callback) {
        for (var i = 0; i < len; i++) {
            if (allureReports[i][item].status !== "NONE") {
                var b = allureReports[i][item].buildId;
                //console.log(allureReports[i][item].buildId);
                //console.log(allureReports[i][item].status);
                results[item].total++;
                results[item].arr[b] = {
                    status: allureReports[i][item].status,
                    link: allureReports[i][item].uri
                }
            } else {      
                var b = allureReports[i].buildId;
                results[item].arr[b] = {
                    status: "NONE"
                }
            }
        }
        var stat = 100 * ((len - 1) - results[item].flop) / (len - 1);
        results[item].stat = parseInt(stat);

        callback();
    }, function(err) {
        // print things to check
    });
    return results;            
}
module.exports = AllureDiff;